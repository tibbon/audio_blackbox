name: Rust

on:
  push:
    branches: [ "main" ]
    tags: ["v*"]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          ${{ runner.os }}-
    
    - name: Cache system packages (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/cache@v3
      with:
        path: |
          /var/lib/apt/lists/*
          /var/cache/apt/archives/*
          /var/cache/apt/archives/partial/*
        key: ${{ runner.os }}-apt-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-apt-
    
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev pkg-config alsa-utils
        # Verify alsa is installed and pkg-config can find it
        pkg-config --list-all | grep alsa || echo "ALSA not found in pkg-config"
        ls -la /usr/lib/pkgconfig/alsa.pc || echo "alsa.pc not found"

    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose
      env:
        # Set explicit environment variables to ensure test consistency
        AUDIO_CHANNELS: "0,1"
        DEBUG: "false" 
        RECORD_DURATION: "1"
        OUTPUT_MODE: "single"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          ${{ runner.os }}-
    
    - name: Cache system packages
      uses: actions/cache@v3
      with:
        path: |
          /var/lib/apt/lists/*
          /var/cache/apt/archives/*
          /var/cache/apt/archives/partial/*
        key: ${{ runner.os }}-apt-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-apt-
    
    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev pkg-config alsa-utils
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --no-default-features -- -D warnings

  release:
    name: Release
    needs: [test, lint]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          ${{ runner.os }}-
    
    - name: Cache system packages
      uses: actions/cache@v3
      with:
        path: |
          /var/lib/apt/lists/*
          /var/cache/apt/archives/*
          /var/cache/apt/archives/partial/*
        key: ${{ runner.os }}-apt-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-apt-
    
    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev pkg-config alsa-utils
    
    - name: Build release
      run: cargo build --release
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/release/blackbox
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
